### tmux config

# Copyright (C) 2015  Wu Junyu
# Author: Wu Junyu <vistar_w@hotmail.com>

# -- general -------------------------------------------------------------------
# setw mode-keys emacs
set -g pane-border-status top
set -g pane-border-format '#[bold]#{pane_title}#[default]'

set -g default-terminal "screen-256color"
set -g xterm-keys on
set -g display-time 3000
set -g escape-time 10
set -sg repeat-time 600
set -g history-limit 65535
set -g base-index 1
set -g pane-base-index 1
set -q -g status-utf8 on
setw -q -g utf8 on

# update tty
set -ag update-environment "SSH_TTY"

# 前缀绑定 (Ctrl+t)
set -g prefix ^t
unbind ^b
bind t send-prefix

# -- display -------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title
set -g set-titles-string "#I:#W"

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# activity
setw -g monitor-activity on
set -g visual-activity off

# 启用鼠标(Tmux v2.1)
set -g mouse on

# 创建window时给 window 命名
# set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'
set-hook -g after-new-window 'command-prompt -I "" "rename-window '%%'"'

# 设置 emacs key
setw -g mode-keys emacs

# -- theme ---------------------------------------------------------------------
# don't use this variables at all (remove, rename)
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015
color_gray="gray"

# theme define
color_dark="$color_black"
color_light="$color_white"
color_session_text="blue"
color_status_text="colour245"
color_main="green"
color_secondary="green"
color_host="yellow"
color_error="red"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_yellow"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"
# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"
# window segments in status line
set -g window-status-separator ""

separator_powerline_left="*"
separator_powerline_right="*"

# setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_error,bg=$color_main]$separator_powerline_right#[default] #I:#W# #[fg=$color_error,bg=$color_main]$separator_powerline_left#[default]"
# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"
# outline for active pane
setw -g pane-active-border-style "fg=$color_main"
# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 100

# widgets to use in status bar
widget_session="#[fg=$color_white,bg=$color_session_text] #S #[default]"
widget_date="#[fg=$color_white,bg=$color_gray]%a %_d/%b %R%p#[default]"
widget_user_host="#[fg=$color_host]#(whoami)#[fg=$color_host]@#H#[default]"
widget_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"

set -g status-left "$widget_is_zoomed"
set -g status-right "| $widget_user_host [$widget_date] $widget_session"


# -- binding --------------------------------------------------------------------
# -----------------------------------------
#  mode             key        desc
#                   R          reload tmux config
#                   c          create new window
#                   C          rename window
#                   e          create new Session
#                   E          rename session
#                   s          switch session
#                   S/f        switch session windows
#                   v          split horizontally
#                   h          split vertically
#                   M-u        resize window up
#                   M-d        resize window down
#                   M-l        resize window left
#                   M-r        resize window right
#                   i          move to up pane
#                   k          move to down pane
#                   j          move to left pane
#                   l          move to right pane
#                   <          switch to previous select pane
#                   >          switch to next select pane
#                   o/z        zoom pane
#                   p/,        select to previous window
#                   n/.        select to next window
#                   [          select to previous pane
#                   ]          select to next pane
#                   Tab        move to last active window
#                   q          kill pane
#                   Q          kill window
#                   C-q        kill other windows
#                   C-k        kill session
#                   y          paste
#                   C-y        paste clipboard content, depend xclip
#                   b          buffer list
#                   C-Space    copy mode
#  copy mode        m          begin selection
#  copy mode        w          copy selection
#  copy mode        u          page up
#  copy mode        d          page down
#  copy mode        p          scorll up
#  copy mode        n          scorll down
#  copy mode        Enter      selection and cancel copy mode
#  copy mode        <          page start
#  copy mode        >          page end
#  copy mode        C-s        search
#  copy mode        C-r        search-backward
#  copy mode        C-s        search-forwoard
# -----------------------------------------

# reload tmux configuration
bind R source-file $HOME/.tmux.conf \; display "config reloaded"

### window
bind c new-window -c "#{pane_current_path}"
bind C command-prompt -I "#{window_name}" "rename-window '%%'"

# window navigation
bind -r , previous-window # select previous window
bind -r . next-window     # select next window

### session
bind e new-session
bind E command-prompt -I "#{session_name}" "rename-session '%%'"

bind -r s command-prompt -p find-session 'switch-client -t %%'
bind -r S command-prompt -p find-session 'switch-client -t ${session_name}:%%'

### pane
# split current window horizontally
bind -r v split-window -v
# split current window vertically
bind -r h split-window -h

# bind z run -b "resize -s 10 10"
bind -r M-u resizew -U 5
bind -r M-d resizew -D 5
bind -r M-l resizew -L 5
bind -r M-r resizew -R 5

bind -r ^u resizep -U 5 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
bind -r ^d resizep -D 5 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
bind -r ^l resizep -L 5 # 绑定Ctrl+h为往←调整面板边缘10个单元格
bind -r ^r resizep -R 5 # 绑定Ctrl+l为往→调整面板边缘10个单元格

# pane navigation
bind -r j select-pane -L  # move left
bind -r k select-pane -D  # move down
bind -r i select-pane -U  # move up
bind -r l select-pane -R  # move right

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+

# Zoom pane
bind o resize-pane -Z

bind Tab last-window        # move to last active window

bind q kill-pane
bind Q kill-window
bind C-q confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind C-s confirm-before -p "kill-session #S? (y/n)" kill-session

# -- copy -------------------------------------------------------------------
bind y pasteb # 绑定y键为粘贴文本
bind C-SPACE copy-mode # 绑定esc键为进入复制模式
bind-key -T copy-mode m send-keys -X begin-selection
bind-key -T copy-mode w send-keys -X copy-selection
bind-key -T copy-mode u send-keys -X page-up
bind-key -T copy-mode d send-keys -X page-down
bind-key -T copy-mode p send-keys -X scorll-up
bind-key -T copy-mode n send-keys -X scorll-down
bind-key -T copy-mode Enter send-keys -X copy-selection-and-cancel \; run -b "tmux save-buffer - | xclip -in -selection clipboard"
# bind-key -T (emacs|vi)-copy v send-keys -X page-up
# bind-key -T (emacs|vi)-copy C-v send-keys -X page-down
# bind-key -T (emacs|vi)-copy p send-keys -X scorll-up
# bind-key -T (emacs|vi)-copy n send-keys -X scorll-down
# bind C-x run " tmux save-buffer -a | xclip -i -sel clipboard;  tmux set-buffer \"$(xclip -o -sel clipboard)\"" # buffer缓存复制到Linux系统粘贴板
bind C-y run -b "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer" # Linux系统粘贴板内容复制到会话

bind -T copy-mode C-s copy-mode \; command-prompt -p "(search up)" "send -X search-backward \"%%%\""

# -- buffers -------------------------------------------------------------------
bind d detach
bind -r b list-buffers  # list paste buffers


# ============================
# ===       Plugins        ===
# ============================
set-environment -g TMUX_PLUGIN_MANAGER_PATH '$TMUX_HOME/plugins/'

# 插件管理
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-sidebar'

# 初始化tmux插件管理器
run '$TMUX_HOME/plugins/tpm/tpm'
